using System.Collections;
using System.Collections.Generic;
using System.Numerics;
using UnityEditor.UI;
using UnityEngine;
using UnityEngine.UI;
using Vector2 = UnityEngine.Vector2;

public class PlayerController : MonoBehaviour
{
   
    private  Rigidbody2D rb;
    private Animator anim;
   
    public float speed;
    public Collider2D coll;
    public float jumpforce;
    public LayerMask ground;
    public int Cherry;

    public Text CherryNum;
    private bool ishurt;


    // Start is called before the first frame update
    void Start()
    {
        rb = GetComponent<Rigidbody2D>();
        anim = GetComponent<Animator>();


    }

    // Update is called once per frame
    void FixedUpdate()
    {
        if (!ishurt)
        {
            Movement();
        }
        SwitchAnim();
    }
    void Movement()
    {
        float horizontalmove = Input.GetAxis("Horizontal");
        float facedircetion = Input.GetAxisRaw("Horizontal");


        //character movemente
        if (horizontalmove != 0)
        {

            rb.velocity = new UnityEngine.Vector2(horizontalmove * speed * Time.deltaTime, rb.velocity.y);

            anim.SetFloat("running", Mathf.Abs(facedircetion));

        }
        if (facedircetion != 0)
        {
            transform.localScale = new UnityEngine.Vector3(facedircetion, 1, 1);
        }

        //character jumping
        if (Input.GetButtonDown("Jump") && coll.IsTouchingLayers(ground))
        {
            rb.velocity = new UnityEngine.Vector2(rb.velocity.x, jumpforce * Time.deltaTime);
            anim.SetBool("jumping", true);




        }

    }
    // animation
    void SwitchAnim()
    {

        anim.SetBool("idle", false);
        if (anim.GetBool("jumping"))
        {
            
            if (rb.velocity.y < 0 )
            {
                anim.SetBool("jumping", false);
                anim.SetBool("falling", true);

            }
        }else if (ishurt)
            NewMethod();
        else if (coll.IsTouchingLayers(ground))
        {
            anim.SetBool("falling", false);
            anim.SetBool("idle", true);
        }

        void NewMethod()
        {
            if (Mathf.Abs(rb.velocity.x) < 0.1f)
            {
                ishurt = false;
            }
        }
    }
    //shouji
    private void OnTriggerEnter2D(Collider2D collision)
    {
        if (collision.tag == "Collections")
        {
            Destroy(collision.gameObject);
            Cherry += 1;
            CherryNum.text = Cherry.ToString();
        }
    }
    // Wipe the enemies

    private void OnCollisionEnter2D(Collision2D collision)
    {

        if (collision.gameObject.tag == "Enemy")
        {
            if (anim.GetBool ("falling" ))
            {
                Destroy (collision.gameObject);
                rb.velocity = new UnityEngine.Vector2(rb.velocity.x, jumpforce * Time.deltaTime);
                anim.SetBool("jumping",
                             true);

            }else if(transform.position.x < collision.gameObject.transform.position.x)
            {
                rb.velocity = new Vector2 (-10, rb.velocity.y);
                ishurt = true;
            } else if (transform.position.x > collision.gameObject.transform.position.x)
            {
                rb.velocity = new Vector2 (10, rb.velocity.y);
                ishurt = true;
            }



        }

    }

